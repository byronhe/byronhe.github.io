<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Cpp | Tech Ideas]]></title>
  <link href="https://blog.helong.info//blog/categories/cpp/atom.xml" rel="self"/>
  <link href="https://blog.helong.info//"/>
  <updated>2019-09-18T22:22:08+08:00</updated>
  <id>https://blog.helong.info//</id>
  <author>
    <name><![CDATA[byronhe]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Visual Studio静态，动态链接库开发工具简单使用]]></title>
    <link href="https://blog.helong.info//2011/11/13/visual-studio%e9%9d%99%e6%80%81%ef%bc%8c%e5%8a%a8%e6%80%81%e9%93%be%e6%8e%a5%e5%ba%93%e5%bc%80%e5%8f%91%e5%b7%a5%e5%85%b7%e7%ae%80%e5%8d%95%e4%bd%bf%e7%94%a8/"/>
    <updated>2011-11-13T00:00:00+08:00</updated>
    <id>https://blog.helong.info//2011/11/13/visual-studio%e9%9d%99%e6%80%81%ef%bc%8c%e5%8a%a8%e6%80%81%e9%93%be%e6%8e%a5%e5%ba%93%e5%bc%80%e5%8f%91%e5%b7%a5%e5%85%b7%e7%ae%80%e5%8d%95%e4%bd%bf%e7%94%a8</id>
    <content type="html"><![CDATA[<p>这是2011年8月份做过的一点实验，查了MSDN等等很多资料，基本搞明白了。这里我不会使用visual studio的图形界面工具，作为专业人士，还是搞懂自己的工具是怎么运转的，这样比较好。</p>

<p>要使用的是visual studio的命令行工具，其实和gcc那堆工具对应关系挺明显的，大致如下：</p>

<table border="1" cellspacing="1" cellpadding="1">
  <tr>
    <td>
      gcc
    </td>
    
    <td>
      cl
    </td>
  </tr>
  
  <tr>
    <td>
      ar
    </td>
    
    <td>
      lib
    </td>
  </tr>
  
  <tr>
    <td>
      ld
    </td>
    
    <td>
      link
    </td>
  </tr>
</table>


<p>文件后缀对应关系:</p>

<!--more-->




<table border="1" cellspacing="1" cellpadding="1">
  <tr>
    <td>
      .a
    </td>
    
    <td>
      .lib
    </td>
  </tr>
  
  <tr>
    <td>
      .so
    </td>
    
    <td>
      .dll
    </td>
  </tr>
  
  <tr>
    <td>
      .o
    </td>
    
    <td>
      .obj
    </td>
  </tr>
</table>


<p>&nbsp;</p>

<p>新手注意：这个命令提示符是&#8221;开始菜单&#8221;&#8211;>>&#8221;Microsoft Visual studio&#8221;&#8211;>>&#8221;Visual Tools&#8221; 那里的提示符，其实就是设置过一些环境变量的cmd。</p>

<p><img src="/images/blog/0_1321170608jSJW.gif"></p>

<p>&nbsp;</p>

<p>先把实验代码贴出来（可以先跳过不看），共有五个文件：</p>

<p>1.build.bat</p>

<pre class="lang:sh decode:true">""C:Program Files (x86)Microsoft Visual Studio 10.0VCvcvarsall.bat"" x86
cd dynamic
del /f /Q * 
cl /LD ..ext.c 
del ext.obj 
cl ..main.c /link ext.lib
del main.obj
cd ..
cd static
del /f /Q *
cl /c ..ext.c
lib ext.obj
del ext.obj
cl ..main-static.c /link ext.lib
del main*.obj main*.exp main*.lib
cd ..</pre>


<p>2.库的头文件，ext.h</p>

<pre class="lang:c++ decode:true">#ifndef EXT_H
#define EXT_H
#ifdef Import
#define Dll __declspec(dllimport)
#else
#ifdef Export
#define Dll __declspec(dllexport)
#else
#define Dll
#endif
#endif

#include 
Dll typedef struct {
int i;
char c;
} st;
Dll extern int num;
Dll void fun();
Dll extern st s;
#endif</pre>




<div class="cpp">
  3.库的实现文件,ext.c
</div>




<pre class="lang:c++ decode:true">#define Export
#include "ext.h"
st s={24,'h'};
int num=0;
void fun(){
printf("hello,i am in lib. num=%dn",num++);
}</pre>




<div class="cpp">
  4.以动态链接库方式使用这个库的程序代码，main.c
</div>




<pre class="lang:c++ decode:true">#define Import
#include "ext.h" 
#include "windows.h"
#include 

int main(){
    fun();
    printf("num=%d\n",num);
    fun();
    printf("num=%d\n",num);
    printf("st i=%d c=%c \n",s.i,s.c);
}</pre>


<p><span style="font-size: 1rem; line-height: 1;">5.以静态链接库方式使用这个库的程序代码，main-static.c</span></p>

<pre class="lang:c++ decode:true"> 
#include "ext.h" 
#include "windows.h"
#include

int main(){
    fun();
    printf("num=%d\n",num);
    fun();
    printf("num=%d\n",num);
    printf("st i=%d c=%c \n",s.i,s.c);
}</pre>


<p>&nbsp;</p>

<p>一，静态链接库</p>

<div>
  <div>
    要给用户提供静态链接库，都要提供哪些文件呢？.h头文件+.lib库文件
  </div>
  
  <div>
  </div>
  
  <div>
    先问个问题： 使用库的最简单方式是什么？当然是不使用库！
  </div>
  
  <div>
  </div>
  
  <div>
    不使用库谁不会啊？使用如下命令：
  </div>
  
  <div>
            cl main-static.c ext.c
  </div>
  
  <div>
            在当前目录下，就会编译，链接成一个main-static.exe，执行一下，没有问题！
  </div>
  
  <div>
  </div>
  
  <div>
            再问个问题：除了exe文件，还看见了什么？有ext.obj, main-static.obj, main-static.lib ,main-static.exp .
  </div>
  
  <div>
  </div>
  
  <div>
             .obj文件是目标文件（object file），
  </div>
  
  <div>
             .lib文件是静态库文件（msdn中称为导入库），
  </div>
  
  <div>
              .exp文件，导出文件，辅助作用（参看<a href="http://msdn.microsoft.com/zh-cn/library/se8y7dcs(v=vs.80).aspx">这里</a>和<a href="http://msdn.microsoft.com/zh-cn/library/kkt2hd12.aspx" target="_blank">这里</a>）
  </div>
  
  <div>
  </div>
  
  <div>
              可以猜想，用cl直接编译生成exe的过程，是
  </div>
  
  <div>
             1. ext.c&#8212;>>ext.obj
  </div>
  
  <div>
             2.main-static.c&#8211;>>main-static.obj
  </div>
  
  <div>
             3.main-static.obj&#8212;>>main-static.exp+main-static.lib
  </div>
  
  <div>
             4.ext.obj+main-static.lib+main-static.exp&#8212;>>main-static.exe
  </div>
  
  <div>
             的过程
  </div>
  
  <div>
  </div>
  
  <div>
    我尝试了改换参数顺序，即用命令 cl ext.c main-static.c
  </div>
  
  <div>
    发现main-static.exp + main-static.lib换成了ext.lib+ext.exp
  </div>
  
  <div>
  </div>
  
  <div>
    这说明是cl是先把.c文件都生成为obj文件，然后把第一个命令行参数指定xxx.c的xxx.obj文件再生成为xxx.lib+xxx.exp文件
  </div>
  
  <div>
  </div>
  
  <div>
  </div>
  
  <div>
    这和静态链接有什么关系呢？关系密切啊！
  </div>
  
  <div>
    把除了ext.lib 以外的所有生成文件删除，运行如下命令:
  </div>
  
  <div>
    cl main-static.c /link ext.lib
  </div>
  
  <div>
    就可以看见，生成了main-static.exe，运行正常。ext.lib就是静态链接库。
  </div>
  
  <p>
    其实，这就是一个静态链接的过程。
  </p>
  
  <p>
    静态链接的第一步，怎么由ext.c生成obj文件？查msdn（或者 命令cl /?）可知，给cl提供/c参数就可以了，先清掉那堆文件，运行 cl /c ext.c
  </p>
  
  <p>
    成功生成ext.obj.同理可以生成main-static.obj。
  </p>
  
  <div>
    严格来说编译已经完成，接下来的，都是链接过程。
  </div>
  
  <div>
  </div>
  
  <div>
    第二步，怎么从obj文件生成.lib文件（加/DEF参数，就可以同时生成.exp文件)
  </div>
  
  <div>
    <div>
      lib ext.obj
    </div>
  </div>
  
  <div>
    就生成了ext.lib
  </div>
  
  <div>
    第三步，怎么从main-static.c + ext.lib 生成exe
  </div>
  
  <div>
    <div>
      cl main-static.c /link ext.lib
    </div>
    
    <p>
      需要注意的是，头文件一定要可以找到。
    </p>
  </div>
  
  <div>
  </div>
  
  <h2>
    二，动态链接库
  </h2>
  
  <div>
    visual studio的动态链接分为显式链接和隐式链接两种（<a href="http://msdn.microsoft.com/zh-cn/library/253b8k2c(v=vs.80).aspx">http://msdn.microsoft.com/zh-cn/library/253b8k2c(v=vs.80).aspx</a>），<a href="http://msdn.microsoft.com/zh-cn/library/784bt7z7(v=vs.80).aspx" target="_blank">显式链接</a>就是自己写代码调用win32<br /> Api加载dll文件，要使用LoadLibrary, GetProcAddress(), FreeLibrary()这些函数，这个方法几乎不需要工具，就不说了，看看msdn的例子就明白了。
  </div>
  
  <div>
    以下说的都是<a href="http://msdn.microsoft.com/zh-cn/library/d14wsce5(v=vs.80).aspx" target="_blank">隐式链接</a>
  </div>
  
  <div>
    visual studio的动态链接库使用很与众不同，竟然需要提供三种文件：.h+.lib+.dll文件，诡异的是，这个.lib文件和静态链接库里的.lib文件其实不一样！
  </div>
  
  <div>
    更诡异的是，用户链接的时候，其实不需要.dll文件！
  </div>
  
  <div>
    对比之下，linux下的gcc，若是动态链接库，需要的是.so+.h 文件（.so相当于.dll），这是显著的差异。
  </div>
  
  <div>
    参看csdn(<a href="http://msdn.microsoft.com/zh-cn/library/3y1sfaz2(v=vs.100).aspx">http://msdn.microsoft.com/zh-cn/library/3y1sfaz2(v=vs.100).aspx</a>)可知，和静态链接不同的是，动态链接需要对库的源代码进行改动，添加
  </div>
  
  <div>
          __declspec( dllimport )
  </div>
  
  <div>
     或 __declspec( dllexport )
  </div>
  
  <div>
  </div>
  
  <div>
    补充：也可以用def文件，不过我没试过，参看<a href="http://msdn.microsoft.com/zh-cn/library/0b9xe492.aspx">http://msdn.microsoft.com/zh-cn/library/0b9xe492.aspx</a> 和 <a href="http://msdn.microsoft.com/zh-cn/library/28d6s79h.aspx">http://msdn.microsoft.com/zh-cn/library/28d6s79h.aspx</a>。
  </div>
  
  <div>
  </div>
  
  <div>
    这个时候要注意，__declspec( dllimport )和__declspec( dllexport ) 的使用是不一样的，在库里导出的符号（函数，变量等，可以用dumpbin查看）应该使用__declspec( dllexport ) ，而使用库的代码，在包含头文件后，要有这些符号的声明，要看到__declspec( dllimport )形式的声明，所以这是有区别的。在上面ext.h里，我用了一个宏Dll来统一处理。
  </div>
  
  <div>
  </div>
  
  <div>
  </div>
  
  <div>
    处理完源代码，就可以编译了。
  </div>
  
  <div>
  </div>
  
  <div>
    第一步，生成obj文件，
  </div>
  
  <div>
    <pre class="lang:sh decode:true ">cl /c ext.c</pre>
    
    <p>
      <span style="line-height: 1.714285714; font-size: 1rem;">第二步，由obj文件生成dll文件+lib文件，</span>
    </p>
  </div>
  
  <div>
    <div>
      <pre class="lang:sh decode:true">cl /LD ext.obj</pre>
      
      <p>
        <span style="font-size: 1rem; line-height: 1;">或者也可以用</span></div> <div>
          <pre class="lang:sh decode:true ">link /DLL ext.obj</pre>
          
          <p>
            <span style="line-height: 1.714285714; font-size: 1rem;">可以看到，生成了ext.dll , ext.exp, ext.lib 三个文件，其中的ext.lib 这个文件和静态链接时生成的ext.lib文件是不一样的！而且ext.dll在main.c的链接过程中是用不着的！</span>
          </p>
        </div></div> 
        
        <div>
          （此时已经生成了dll文件，要是使用显式链接，就把dll文件弄走，自己写代码去啦），继续隐式链接<br /> 第三步，不妨移走ext.dll，然后编译
        </div>
        
        <div>
        </div>
        
        <div>
          <div>
            <pre class="lang:sh decode:true ">cl main.c /link ext.lib</pre>
            
            <p>
              &nbsp;
            </p>
            
            <p>
              <span style="line-height: 1.714285714; font-size: 1rem;">可以看到生成main.exe，但是运行一下，会报告找不到ext.dll，当然找不到啦，只要把ext.dll移到当前目录下（或在dll文件查找路径中的一个中）即可正常运行。</span></div> </div> <div>
                <p>
                     注：dll文件查找路径参看 <a href="http://msdn.microsoft.com/zh-cn/library/7d83bc18(v=vs.80).aspx">http://msdn.microsoft.com/zh-cn/library/7d83bc18(v=vs.80).aspx</a>
                </p>
              </div>
              
              <div>
                这个领域关注的人少，鄙人理解浅薄，错误难免，欢迎指正。
              </div>
              
              <div>
              </div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Codeblocks配合gfortran作为fortran开发环境的配置方法]]></title>
    <link href="https://blog.helong.info//2011/05/12/codeblocks%e9%85%8d%e5%90%88gfortran%e4%bd%9c%e4%b8%bafortran%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83%e7%9a%84%e9%85%8d%e7%bd%ae%e6%96%b9%e6%b3%95/"/>
    <updated>2011-05-12T00:00:00+08:00</updated>
    <id>https://blog.helong.info//2011/05/12/codeblocks%e9%85%8d%e5%90%88gfortran%e4%bd%9c%e4%b8%bafortran%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83%e7%9a%84%e9%85%8d%e7%bd%ae%e6%96%b9%e6%b3%95</id>
    <content type="html"><![CDATA[<p>&nbsp;</p>

<p>（以前在bmy bbs发过一次）</p>

<p>&nbsp;</p>

<p>&nbsp; 这个方法试过在64位win7和32位winxp上可用。</p>

<p>&nbsp; &nbsp; 1，首先安装codeblockes，必须选完全安装（Full,All plugins,&#8230;），路径可以选默认路径即 C:/Program Files/CodeBlocks</p>

<p>（如果安装到别的路径，后面提到的路径请自行对应更改）,一路点yes，装完后关掉codeblocks。</p>

<p>&nbsp; &nbsp; 2，汉化，把locale这个文件夹拷贝到 C:/Program Files/CodeBlocks/share/CodeBlocks/下（win7下需要管理员权限），确保最后的路径是这样的： C:/Program Files/CodeBlocks/share/CodeBlocks/locale/zh_CN/codeblocks.mo</p>

<p>然后打开codeblocks，如果没有自动汉化，到settings->environment->选左侧view，找到右侧的internationalization里找中文选上，点OK后重启codeblocks，如果汉化不成功，请检查codeblocks.mo文件是否在正确的路径。</p>

<p>&nbsp; &nbsp; 3，安装含有gfortran的gcc，注意：最好选择一个不带空格的路径，更不要用中文路径，如C:/gcc ,把路径记住。</p>

<p>&nbsp; &nbsp; 4,让codeblocks使用gfortran，在codeblocks菜单中选 &ldquo;设置&rdquo;->&ldquo;编译器和调试器&rdquo;，选中&ldquo;GNU GCC 编译器&rdquo;，点&ldquo;复制&rdquo;，然后输入一个好记的名字如&ldquo;my Gfotran compiler&rdquo;，打开&ldquo;可执行工具链&rdquo;，在&ldquo;编译器安装目录&rdquo;里找到C:/gcc，确定。</p>

<p>然后把下面的&ldquo;C编译器&rdquo;，&ldquo;C++编译器&rdquo;，&ldquo;动态库链接器&rdquo;都选成gfortran.exe,&ldquo;调试器&rdquo;选gdb.exe,其他的都不要动，确定。安装完成。</p>

<p>&nbsp; &nbsp; 5，文件->新建->项目，选&ldquo;empty project&rdquo;，输入项目名，保存路径等，然后，在编译器下拉框中，必须选择&ldquo;my Gfotran compiler&rdquo;其余默认，建好项目后，选文件->新建->文件，选&ldquo;empty file&rdquo;，点 &ldquo;&#8230;&rdquo;按钮，输入一个以.f90结尾的文件名，并选中debug和release，确定。就可以在打开的编辑窗口中输入代码了。在菜单上有构建，调试等功能。</p>

<p>&nbsp;</p>

<p>参考链接：</p>

<p><a href="http://wiki.codeblocks.org/index.php?title=Installing_Fortran_Compiler">http://wiki.codeblocks.org/index.php?title=Installing_Fortran_Compiler</a></p>

<p><a href="http://www.d2school.com/codeblocks/doc/codeblocks_setup.html%C3%82%C2%A0">http://www.d2school.com/codeblocks/doc/codeblocks_setup.html&nbsp;&nbsp; </a></p>

<p>&nbsp;</p>

<p>codeblocks下载页面(要上外网)</p>

<p><a href="http://www.codeblocks.org/downloads/26">http://www.codeblocks.org/downloads/26</a></p>

<p>equation solution编译的gcc</p>

<p><a href="http://www.equation.com/servlet/equation.cmd?fa=fortran">http://www.equation.com/servlet/equation.cmd?fa=fortran</a></p>

<p>汉化包&nbsp;</p>

<p><a href="http://www.d2school.com/codeblocks/download/d2school_codeblocks_chinese_locale.7z%C3%82%C2%A0">http://www.d2school.com/codeblocks/download/d2school_codeblocks_chinese_locale.7z&nbsp;</a></p>

<p>&nbsp;</p>
]]></content>
  </entry>
  
</feed>
