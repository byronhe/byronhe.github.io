<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on Tech Ideas</title>
    <link>https://blog.helong.info/categories/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on Tech Ideas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 27 Mar 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.helong.info/categories/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>mock C&#43;&#43; function for unit test</title>
      <link>https://blog.helong.info/post/2014/03/27/mock-c-plus-plus-function-for-unit-test/</link>
      <pubDate>Thu, 27 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.helong.info/post/2014/03/27/mock-c-plus-plus-function-for-unit-test/</guid>
      <description>&lt;p&gt;在单元测试中，我们需要提供业务逻辑的mock版本，
当业务逻辑实现为C++的virtual function时，这是很容易的，我们只需要写一个子类，
实现virtual function就行了，Google 的 gmock就针对这种情况设计。&lt;/p&gt;
&lt;p&gt;可是，如果遗留代码中有一般C函数，非virtual的类成员函数，模板函数，inline函数，如何提供mock版本呢？&lt;/p&gt;
&lt;p&gt;下面的代码用一点trick实现了上述函数的运行时mock。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>